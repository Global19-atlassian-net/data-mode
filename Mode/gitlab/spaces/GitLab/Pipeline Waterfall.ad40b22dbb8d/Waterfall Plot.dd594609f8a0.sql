WITH PIPELINE_CHANGE AS(WITH NEW AS
    (SELECT A.*,
            S.*,
            R.RECORD_TYPE_NAME
   FROM analytics.sfdc_snapshot_opportunity_xf A
   LEFT JOIN ANALYTICS.SFDC_RECORD_TYPE R
     ON A.RECORD_TYPE_ID = R.RECORD_TYPE_ID
   INNER JOIN analytics.analytics_staging.sfdc_opportunitystage S
     ON A.OPPORTUNITY_STAGE_ID = S.STAGE_ID
     WHERE SNAPSHOT_DATE = TO_TIMESTAMP('2018-12-23')
       AND S.MAPPED_STAGE != 'Unmapped'
       AND 1 = 1 ), OLD AS
    (SELECT A.*,
            OS.*,
            R.RECORD_TYPE_NAME
   FROM analytics.sfdc_snapshot_opportunity_xf A
   LEFT JOIN ANALYTICS.SFDC_RECORD_TYPE R
     ON A.RECORD_TYPE_ID = R.RECORD_TYPE_ID
   INNER JOIN analytics.analytics_staging.sfdc_opportunitystage OS
     ON A.OPPORTUNITY_STAGE_ID = OS.STAGE_ID
     WHERE SNAPSHOT_DATE = TO_TIMESTAMP('2018-12-16')
       AND OS.MAPPED_STAGE != 'Unmapped'
       AND 1 = 1 )
SELECT 'Starting' AS CATEGORY,
       '1' AS "order",
       NULL::DATE AS PREVIOUS_CLOSE_DATE,
       0.0::FLOAT AS PREVIOUS_IACV,
       0.0::FLOAT AS PREVIOUS_ACV,
       0.0::FLOAT AS PREVIOUS_TCV,
       0.0::FLOAT AS PREVIOUS_RENEWAL_ACV,
       OLD.*
FROM OLD
  WHERE (OLD.SALES_ACCEPTED_DATE < TO_TIMESTAMP('2018-12-16')
       OR OLD.SALES_ACCEPTED_DATE IS NULL
       OR OLD.OPPORTUNITY_CLOSEDATE = TO_TIMESTAMP('2018-12-16'))
    AND (((OPPORTUNITY_CLOSEDATE) >= ((CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)))
          AND (OPPORTUNITY_CLOSEDATE) < ((DATEADD('month', 3, CAST(DATE_TRUNC('quarter', CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)) AS DATE))))))
    AND OLD.IS_CLOSED = FALSE
    AND OLD.MAPPED_STAGE != '0-Pending Acceptance'
UNION ALL
SELECT 'Created' AS CATEGORY,
       '2' AS "order",
       NULL::DATE AS PREVIOUS_CLOSE_DATE,
       0.0::FLOAT AS PREVIOUS_IACV,
       0.0::FLOAT AS PREVIOUS_ACV,
       0.0::FLOAT AS PREVIOUS_TCV,
       0.0::FLOAT AS PREVIOUS_RENEWAL_ACV,
       NEW.*
FROM NEW
WHERE NEW.SALES_ACCEPTED_DATE >= TO_TIMESTAMP('2018-12-16')
  AND NEW.SALES_ACCEPTED_DATE <= TO_TIMESTAMP('2018-12-23')
  AND (((NEW.OPPORTUNITY_CLOSEDATE) >= ((CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)))
        AND (NEW.OPPORTUNITY_CLOSEDATE) < ((DATEADD('month', 3, CAST(DATE_TRUNC('quarter', CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)) AS DATE))))))
  AND (NEW.IS_CLOSED = FALSE
       OR (NEW.IS_CLOSED = TRUE
           AND NEW.IS_WON = TRUE))
UNION ALL
SELECT 'Created' AS CATEGORY,
       '2' AS "order",
       NULL::DATE AS PREVIOUS_CLOSE_DATE,
       0.0::FLOAT AS PREVIOUS_IACV,
       0.0::FLOAT AS PREVIOUS_ACV,
       0.0::FLOAT AS PREVIOUS_TCV,
       0.0::FLOAT AS PREVIOUS_RENEWAL_ACV,
       NEW.*
FROM NEW
FULL JOIN OLD
  ON OLD.OPPORTUNITY_ID=NEW.OPPORTUNITY_ID
WHERE (((NEW.OPPORTUNITY_CLOSEDATE) >= ((CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)))
        AND (NEW.OPPORTUNITY_CLOSEDATE) < ((DATEADD('month', 3, CAST(DATE_TRUNC('quarter', CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)) AS DATE))))))
  AND NEW.SALES_ACCEPTED_DATE IS NULL
  AND NEW.OPPORTUNITY_CLOSEDATE >= TO_TIMESTAMP('2018-12-16')
  AND ((OLD.OPPORTUNITY_NAME IS NULL
        AND (OLD.MAPPED_STAGE != '0-Pending Acceptance'
             OR OLD.MAPPED_STAGE IS NULL)
        AND NEW.IS_CLOSED = FALSE
        AND NEW.MAPPED_STAGE != '0-Pending Acceptance')
       OR (OLD.MAPPED_STAGE = '0-Pending Acceptance'
           AND NEW.IS_CLOSED = TRUE)
       OR (OLD.MAPPED_STAGE = '0-Pending Acceptance'
           AND NEW.MAPPED_STAGE IN ('1-Discovery',
                                    '2-Scoping',
                                    '3-Technical Evaluation',
                                    '4-Propoasl',
                                    '5-Negotiating',
                                    '6-Awaiting Signature'))
       OR (OLD.OPPORTUNITY_NAME IS NULL
           AND NEW.IS_CLOSED = TRUE
           AND NEW.IS_WON = TRUE)
       OR (NEW.OPPORTUNITY_CLOSEDATE = TO_TIMESTAMP('2018-12-16')
           AND NEW.IS_CLOSED = TRUE
           AND NEW.IS_WON = TRUE))
UNION ALL
SELECT 'Moved In' AS CATEGORY,
       '3' AS "order",
       OLD.OPPORTUNITY_CLOSEDATE AS PREVIOUS_CLOSE_DATE,
       0.0::FLOAT AS PREVIOUS_IACV,
       0.0::FLOAT AS PREVIOUS_ACV,
       0.0::FLOAT AS PREVIOUS_TCV,
       0.0::FLOAT AS PREVIOUS_RENEWAL_ACV,
       NEW.*
FROM NEW
FULL JOIN OLD
  ON OLD.OPPORTUNITY_ID=NEW.OPPORTUNITY_ID
WHERE (OLD.OPPORTUNITY_CLOSEDATE < CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)
       OR OLD.OPPORTUNITY_CLOSEDATE >= DATEADD('month', 3, CAST(DATE_TRUNC('quarter', CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)) AS DATE)))
  AND (((NEW.OPPORTUNITY_CLOSEDATE) >= ((CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)))
        AND (NEW.OPPORTUNITY_CLOSEDATE) < ((DATEADD('month', 3, CAST(DATE_TRUNC('quarter', CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)) AS DATE))))))
  AND OLD.MAPPED_STAGE != '0-Pending Acceptance'
UNION ALL
SELECT 'Increased' AS CATEGORY,
       '4' AS "order",
       NULL::DATE AS PREVIOUS_CLOSE_DATE,
       OLD.IACV AS PREVIOUS_IACV,
       OLD.ACV AS PREVIOUS_ACV,
       OLD.TCV AS PREVIOUS_TCV,
       OLD.RENEWAL_ACV AS PREVIOUS_RENEWAL_ACV,
       NEW.*
FROM NEW
FULL JOIN OLD
  ON OLD.OPPORTUNITY_ID=NEW.OPPORTUNITY_ID
WHERE (OLD.OPPORTUNITY_CLOSEDATE >= CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)
       AND OLD.OPPORTUNITY_CLOSEDATE < DATEADD('month', 3, CAST(DATE_TRUNC('quarter', CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)) AS DATE)))
  AND (((NEW.OPPORTUNITY_CLOSEDATE) >= ((CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)))
        AND (NEW.OPPORTUNITY_CLOSEDATE) < ((DATEADD('month', 3, CAST(DATE_TRUNC('quarter', CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)) AS DATE))))))
  AND NEW.IACV > OLD.IACV
  AND OLD.IS_CLOSED = FALSE
  AND OLD.MAPPED_STAGE != '0-Pending Acceptance'
UNION ALL
SELECT 'Decreased' AS CATEGORY,
       '6' AS "order",
       NULL::DATE AS PREVIOUS_CLOSE_DATE,
       OLD.IACV AS PREVIOUS_IACV,
       OLD.ACV AS PREVIOUS_ACV,
       OLD.TCV AS PREVIOUS_TCV,
       OLD.RENEWAL_ACV AS PREVIOUS_RENEWAL_ACV,
       NEW.*
FROM NEW
FULL JOIN OLD
  ON OLD.OPPORTUNITY_ID=NEW.OPPORTUNITY_ID
WHERE (OLD.OPPORTUNITY_CLOSEDATE >= CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)
       AND OLD.OPPORTUNITY_CLOSEDATE < DATEADD('month', 3, CAST(DATE_TRUNC('quarter', CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)) AS DATE)))
  AND (((NEW.OPPORTUNITY_CLOSEDATE) >= ((CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)))
        AND (NEW.OPPORTUNITY_CLOSEDATE) < ((DATEADD('month', 3, CAST(DATE_TRUNC('quarter', CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)) AS DATE))))))
  AND NEW.IACV < OLD.IACV
  AND OLD.IS_CLOSED = FALSE
  AND OLD.MAPPED_STAGE != '0-Pending Acceptance'
UNION ALL
SELECT 'Moved Out' AS CATEGORY ,
       '5' AS "order" ,
       OLD.OPPORTUNITY_CLOSEDATE AS PREVIOUS_CLOSE_DATE ,
       0.0::FLOAT AS PREVIOUS_IACV ,
       0.0::FLOAT AS PREVIOUS_ACV ,
       0.0::FLOAT AS PREVIOUS_TCV ,
       0.0::FLOAT AS PREVIOUS_RENEWAL_ACV ,
       NEW.*
FROM NEW
FULL JOIN OLD
  ON OLD.OPPORTUNITY_ID=NEW.OPPORTUNITY_ID
WHERE ( NEW.OPPORTUNITY_CLOSEDATE < CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)
       OR NEW.OPPORTUNITY_CLOSEDATE >= DATEADD('month', 3, CAST(DATE_TRUNC('quarter', CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)) AS DATE)) )
  AND (( (OLD.OPPORTUNITY_CLOSEDATE) >= ((CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)))
        AND (OLD.OPPORTUNITY_CLOSEDATE) < ((DATEADD('month', 3, CAST(DATE_TRUNC('quarter', CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)) AS DATE)))) ))
  AND OLD.IS_CLOSED = FALSE
  AND OLD.MAPPED_STAGE != '0-Pending Acceptance'
UNION ALL 
SELECT 'Won' AS CATEGORY ,
       '7' AS "order" ,
       NULL::DATE AS PREVIOUS_CLOSE_DATE ,
       0.0::FLOAT AS PREVIOUS_IACV ,
       0.0::FLOAT AS PREVIOUS_ACV ,
       0.0::FLOAT AS PREVIOUS_TCV ,
       0.0::FLOAT AS PREVIOUS_RENEWAL_ACV ,
       NEW.*
FROM NEW
FULL JOIN OLD
  ON OLD.OPPORTUNITY_ID=NEW.OPPORTUNITY_ID
  WHERE (( (NEW.OPPORTUNITY_CLOSEDATE) >= ((CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)))
          AND (NEW.OPPORTUNITY_CLOSEDATE) < ((DATEADD('month', 3, CAST(DATE_TRUNC('quarter', CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)) AS DATE)))) ))
    AND NEW.IS_WON = TRUE
    AND ( OLD.IS_CLOSED = FALSE
       OR NEW.OPPORTUNITY_CLOSEDATE = TO_TIMESTAMP('2018-12-16') )
    AND NEW.OPPORTUNITY_CLOSEDATE >= TO_TIMESTAMP('2018-12-16')
UNION ALL
SELECT 'Won' AS CATEGORY ,
       '7' AS "order" ,
       NULL::DATE AS PREVIOUS_CLOSE_DATE ,
       0.0::FLOAT AS PREVIOUS_IACV ,
       0.0::FLOAT AS PREVIOUS_ACV ,
       0.0::FLOAT AS PREVIOUS_TCV ,
       0.0::FLOAT AS PREVIOUS_RENEWAL_ACV ,
       NEW.*
FROM NEW
FULL JOIN OLD
  ON OLD.OPPORTUNITY_ID=NEW.OPPORTUNITY_ID
WHERE (( (NEW.OPPORTUNITY_CLOSEDATE) >= ((CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)))
        AND (NEW.OPPORTUNITY_CLOSEDATE) < ((DATEADD('month', 3, CAST(DATE_TRUNC('quarter', CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)) AS DATE)))) ))
  AND NEW.IS_WON = TRUE
  AND OLD.OPPORTUNITY_NAME IS NULL
  AND NEW.OPPORTUNITY_CLOSEDATE >= TO_TIMESTAMP('2018-12-16')
UNION ALL
SELECT 'Lost' AS CATEGORY ,
       '8' AS "order" ,
       NULL::DATE AS PREVIOUS_CLOSE_DATE ,
       0.0::FLOAT AS PREVIOUS_IACV ,
       0.0::FLOAT AS PREVIOUS_ACV ,
       0.0::FLOAT AS PREVIOUS_TCV ,
       0.0::FLOAT AS PREVIOUS_RENEWAL_ACV ,
       NEW.*
FROM NEW
INNER JOIN OLD
  ON OLD.OPPORTUNITY_ID=NEW.OPPORTUNITY_ID
WHERE (( (NEW.OPPORTUNITY_CLOSEDATE) >= ((CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)))
        AND (NEW.OPPORTUNITY_CLOSEDATE) < ((DATEADD('month', 3, CAST(DATE_TRUNC('quarter', CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)) AS DATE)))) ))
  AND NEW.IS_WON = FALSE
  AND NEW.IS_CLOSED = TRUE
  AND OLD.IS_CLOSED = FALSE
  AND OLD.STAGE_ID != '33' -- duplicates

  AND NEW.REASON_FOR_LOSS != 'Merged into another opportunity'
UNION ALL
SELECT 'Ending' AS CATEGORY ,
       '9' AS "order" ,
       NULL::DATE AS PREVIOUS_CLOSE_DATE ,
       0.0::FLOAT AS PREVIOUS_IACV ,
       0.0::FLOAT AS PREVIOUS_ACV ,
       0.0::FLOAT AS PREVIOUS_TCV ,
       0.0::FLOAT AS PREVIOUS_RENEWAL_ACV ,
       NEW.*
FROM NEW
WHERE (( (NEW.OPPORTUNITY_CLOSEDATE) >= ((CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)))
        AND (NEW.OPPORTUNITY_CLOSEDATE) < ((DATEADD('month', 3, CAST(DATE_TRUNC('quarter', CAST(DATE_TRUNC('quarter', DATE_TRUNC('day', CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', CAST(CURRENT_TIMESTAMP() AS TIMESTAMP_NTZ)))) AS DATE)) AS DATE)))) ))
  AND NEW.IS_CLOSED = FALSE
  AND NEW.MAPPED_STAGE != '0-Pending Acceptance' )
  SELECT PIPELINE_CHANGE."order" AS "pipeline_change.order",
         PIPELINE_CHANGE.CATEGORY AS "pipeline_change.category",
         CASE
             WHEN 'IACV' = 'ACV' THEN (COALESCE(SUM( CASE
                                                         WHEN PIPELINE_CHANGE.CATEGORY IN ('Starting', 'Created', 'Moved In', 'Ending') THEN PIPELINE_CHANGE.ACV
                                                         WHEN PIPELINE_CHANGE.CATEGORY IN ('Increased', 'Decreased') THEN PIPELINE_CHANGE.ACV - PIPELINE_CHANGE.PREVIOUS_ACV
                                                         WHEN PIPELINE_CHANGE.CATEGORY IN ('Moved Out', 'Won', 'Lost') THEN -1.0*PIPELINE_CHANGE.ACV
                                                     END ), 0))
             WHEN 'IACV' = 'IACV' THEN (COALESCE(SUM( CASE
                                                          WHEN PIPELINE_CHANGE.CATEGORY IN ('Starting', 'Created', 'Moved In', 'Ending') THEN PIPELINE_CHANGE.IACV - PIPELINE_CHANGE.PREVIOUS_IACV
                                                          WHEN PIPELINE_CHANGE.CATEGORY IN ('Increased', 'Decreased') THEN PIPELINE_CHANGE.IACV - PIPELINE_CHANGE.PREVIOUS_IACV
                                                          WHEN PIPELINE_CHANGE.CATEGORY IN ('Moved Out', 'Won', 'Lost') THEN -1.0*PIPELINE_CHANGE.IACV - PIPELINE_CHANGE.PREVIOUS_IACV
                                                      END ), 0))
             WHEN 'IACV' = 'Renewal ACV' THEN (COALESCE(SUM( CASE
                                                                 WHEN PIPELINE_CHANGE.CATEGORY IN ('Starting', 'Created', 'Moved In', 'Ending') THEN PIPELINE_CHANGE.RENEWAL_ACV
                                                                 WHEN PIPELINE_CHANGE.CATEGORY IN ('Increased', 'Decreased') THEN PIPELINE_CHANGE.RENEWAL_ACV - PIPELINE_CHANGE.PREVIOUS_RENEWAL_ACV
                                                                 WHEN PIPELINE_CHANGE.CATEGORY IN ('Moved Out', 'Won', 'Lost') THEN -1.0*PIPELINE_CHANGE.RENEWAL_ACV
                                                             END ), 0))
             WHEN 'IACV' = 'TCV' THEN (COALESCE(SUM( CASE
                                                         WHEN PIPELINE_CHANGE.CATEGORY IN ('Starting', 'Created', 'Moved In', 'Ending') THEN PIPELINE_CHANGE.TCV
                                                         WHEN PIPELINE_CHANGE.CATEGORY IN ('Increased', 'Decreased') THEN PIPELINE_CHANGE.TCV - PIPELINE_CHANGE.PREVIOUS_TCV
                                                         WHEN PIPELINE_CHANGE.CATEGORY IN ('Moved Out', 'Won', 'Lost') THEN -1.0*PIPELINE_CHANGE.TCV
                                                     END ), 0))
         END AS "pipeline_change.acv_metric"
  FROM PIPELINE_CHANGE GROUP BY 1,
                               2
ORDER BY 1 LIMIT 500
  
  